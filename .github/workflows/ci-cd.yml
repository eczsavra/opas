name: OPAS CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  PYTHON_VERSION: '3.11'

jobs:
  # Build and Test
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache .NET dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Restore .NET dependencies
      run: |
        find apps -name "*.csproj" -execdir dotnet restore {} \;

    - name: Install Python dependencies
      run: |
        find apps -name "requirements.txt" -execdir pip install -r {} \;

    - name: Build .NET projects
      run: |
        find apps -name "*.csproj" -execdir dotnet build --no-restore {} \;

    - name: Run .NET tests
      run: |
        find apps -name "*.csproj" -execdir dotnet test --no-build --verbosity normal {} \;

    - name: Run Python tests
      run: |
        find apps -name "requirements.txt" -execdir python -m pytest {} \;

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run SAST scan
      uses: github/codeql-action/init@v2
      with:
        languages: csharp, python

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run dependency scan
      run: |
        # .NET dependency scan
        dotnet list package --vulnerable

        # Python dependency scan
        pip-audit

  # Docker Build
  docker-build:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        # Build .NET services
        find apps -name "Dockerfile" -execdir docker build -t opas/{} . \;

        # Push images
        find apps -name "Dockerfile" -execdir docker push opas/{} . \;

  # Deploy to Staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: Setup Helm
      uses: azure/setup-helm@v3

    - name: Deploy to staging
      run: |
        kubectl config use-context ${{ secrets.KUBE_CONFIG_STAGING }}
        helm upgrade --install opas platform/helm/opas --namespace opas --values platform/helm/opas/values-staging.yml

  # Deploy to Production
  deploy-production:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: Setup Helm
      uses: azure/setup-helm@v3

    - name: Deploy to production
      run: |
        kubectl config use-context ${{ secrets.KUBE_CONFIG_PRODUCTION }}
        helm upgrade --install opas platform/helm/opas --namespace opas --values platform/helm/opas/values-production.yml
